server {
	listen 80; #listen on port 80 for IPv4
	listen [::]:80; #listen on port 80 for IPv6
	return 444; # close the connection
}

# the first server block serves as a HTTP bouncer and kicks anyone trying to access unencrypted connections

server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name jlu.42.fr;

    ssl_protocols TLSv1.2 TLSv1.3; #only allow TLS1.2 and 1.3 connection because they are the most secure
	#generating the SSL key and cert files
	ssl_certificate /etc/ssl/certs/server.crt;
	ssl_certificate_key /etc/ssl/private/server.key;
	ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
	ssl_prefer_server_ciphers off; #the client decides which one of the ciphers works the best for its hardware

	root /var/www/wordpress;
	index index.php index.html index.html;

	# WordPress-specific rules
	location / {
	    try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
	    include fastcgi_params;
		fastcgi_pass wordpress:9000;
		fastcgi_index index.php;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_buffer_size 128k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
	}

	# Deny access to .htaccess files
	location ~ /\.ht {
	    deny all;
	}
}
